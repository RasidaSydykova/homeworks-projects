{"ast":null,"code":"var _jsxFileName = \"/Users/rasidataalaybekovna/Desktop/projects/homework-51/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Number from \"./Number/Number\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [numbers, setNumbers] = useState([]);\n  const changeNumbers = () => {\n    let array = [];\n    while (array.length < 5) {\n      let range = Math.floor(Math.random() * (36 - 5) + 5);\n      if (array.indexOf(range) === -1) array.push(range);\n      let unique = true;\n      for (let i = 5; i < 36; i++) {\n        if (range === array[i]) {\n          unique = false;\n        } else if (!unique) {\n          array.push(range);\n        }\n      }\n    }\n    array.sort((a, b) => a - b);\n    setNumbers({\n      number: array\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: changeNumbers,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"change-button\",\n        children: \"New numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Number, {\n      number: numbers.number[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Number, {\n      number: numbers.number[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Number, {\n      number: numbers.number[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Number, {\n      number: numbers.number[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Number, {\n      number: numbers.number[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"twSmzLoLFYr+nV3+yczLvemrYnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Number","jsxDEV","_jsxDEV","App","_s","numbers","setNumbers","changeNumbers","array","length","range","Math","floor","random","indexOf","push","unique","i","sort","a","b","number","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rasidataalaybekovna/Desktop/projects/homework-51/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Number from \"./Number/Number\";\nimport './App.css';\n\nconst App = () => {\n  const [numbers, setNumbers] = useState<number[]>([]);\n    const changeNumbers = () => {\n      let array = [];\n      while(array.length < 5) {\n        let range= Math.floor(Math.random() * (36 - 5) + 5);\n        if(array.indexOf(range) === -1) array.push(range);\n        let unique = true;\n        for(let i = 5; i < 36; i++) {\n          if(range === array[i]) {\n            unique = false;\n          } else if (!unique) {\n            array.push(range);\n          }\n        }\n      }\n\n      array.sort((a, b) => a - b);\n      setNumbers({number: array});\n    };\n\n  return (\n    <div className=\"App\">\n      <div onClick={changeNumbers}>\n        <button className=\"change-button\">New numbers</button>\n      </div>\n      <Number number={numbers.number[0]}/>\n      <Number number={numbers.number[1]}/>\n      <Number number={numbers.number[2]}/>\n      <Number number={numbers.number[3]}/>\n      <Number number={numbers.number[4]}/>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}